name: Synthetic Geo Monitoring

on:
  workflow_dispatch:
  push:
    branches: [FE-777]

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          echo "matrix={\"include\":[{ \"base-url\":\"https://app.osmosis.zone\", \"server-url\":\"http://138.68.112.16:8888\", \"env\": \"production\"}, { \"base-url\":\"https://stage.osmosis.zone\", \"server-url\":\"http://138.68.112.16:8888\", \"env\": \"staging\"}]}" >> "$GITHUB_OUTPUT"

  fe-quote-tests:
    timeout-minutes: 15
    name: ${{ matrix.env }}-fe-quote-tests
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup-matrix.outputs.matrix)}}
    steps:
      - name: Echo IP
        run: |
          curl -L "https://ipinfo.io" -s
          curl -x "http://osmo:tlnyproxy88@138.68.112.16:8888" "https://ipinfo.io" -s
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.OS }}-20.x-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-20.x-
      - name: Install Playwright
        run: |
          yarn --cwd packages/web install --frozen-lockfile && npx playwright install --with-deps chromium
      - name: Run Swap tests on ${{ matrix.env }}
        env:
          BASE_URL: ${{ matrix.base-url }}
          TEST_PROXY: ${{ matrix.server-url }}
          TEST_PROXY_USERNAME: ${{secrets.TEST_PROXY_USERNAME}}
          TEST_PROXY_PASSWORD: ${{secrets.TEST_PROXY_PASSWORD}}
        run: |
          cd packages/web
          npx playwright test select pools
      - name: upload test results
        if: always()
        id: e2e-test-results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.env }}-quote-test-results
          path: packages/web/playwright-report

  delete-deployments:
    runs-on: ubuntu-latest
    if: always()
    needs: [fe-quote-tests]
    steps:
      - name: Delete Previous deployments
        uses: actions/github-script@v7
        with:
          debug: true
          script: |
            const deployments = await github.rest.repos.listDeployments({
               owner: context.repo.owner,
               repo: context.repo.repo,
               sha: context.sha
             });
             await Promise.all(
               deployments.data.map(async (deployment) => {
                 await github.rest.repos.createDeploymentStatus({ 
                   owner: context.repo.owner, 
                   repo: context.repo.repo, 
                   deployment_id: deployment.id, 
                   state: 'inactive' 
                 });
                 return github.rest.repos.deleteDeployment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id
                });
               })
             );
