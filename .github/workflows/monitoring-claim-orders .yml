name: Technical job to claim orders created by monitoring

on:
  workflow_dispatch:
  schedule:
    - cron: "19 * * * *"

jobs:
  fe-claim1-tests:
    timeout-minutes: 10
    runs-on: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.OS }}-20.x-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-20.x-
      - name: Install Playwright
        run: |
          yarn --cwd packages/e2e install --frozen-lockfile && npx playwright install --with-deps chromium
      - name: Run Swap tests in US
        env:
          BASE_URL: "https://app.osmosis.zone"
          PRIVATE_KEY: ${{ secrets.TEST_PRIVATE_KEY_1 }}
        run: |
          cd packages/e2e
          npx playwright test claim
      - name: upload test results
        if: failure()
        id: e2e-test-results
        uses: actions/upload-artifact@v4
        with:
          name: claim1-test-results
          path: packages/e2e/playwright-report

  fe-claim2-tests:
    timeout-minutes: 10
    runs-on: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.OS }}-20.x-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-20.x-
      - name: Install Playwright
        run: |
          yarn --cwd packages/e2e install --frozen-lockfile && npx playwright install --with-deps chromium
      - name: Run Claim tests
        env:
          BASE_URL: "https://app.osmosis.zone"
          PRIVATE_KEY: ${{ secrets.TEST_PRIVATE_KEY_2 }}
        run: |
          cd packages/e2e
          npx playwright test claim
      - name: upload claim2 test results
        if: failure()
        id: monitoring-test-results
        uses: actions/upload-artifact@v4
        with:
          name: claim2-test-results
          path: packages/e2e/playwright-report

  delete-deployments:
    runs-on: ubuntu-latest
    if: always()
    needs: [fe-claim1-tests, fe-claim2-tests]
    steps:
      - name: Delete Previous deployments
        uses: actions/github-script@v7
        with:
          debug: true
          script: |
            const deployments = await github.rest.repos.listDeployments({
               owner: context.repo.owner,
               repo: context.repo.repo,
               sha: context.sha
             });
             await Promise.all(
               deployments.data.map(async (deployment) => {
                 await github.rest.repos.createDeploymentStatus({ 
                   owner: context.repo.owner, 
                   repo: context.repo.repo, 
                   deployment_id: deployment.id, 
                   state: 'inactive' 
                 });
                 return github.rest.repos.deleteDeployment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id
                });
               })
             );
